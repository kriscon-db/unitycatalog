/*
 * Unity Catalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.unitycatalog.server.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.unitycatalog.server.model.ModelOperation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GenerateTemporaryModelVersionCredential
 */
@JsonPropertyOrder({
  GenerateTemporaryModelVersionCredential.JSON_PROPERTY_CATALOG_NAME,
  GenerateTemporaryModelVersionCredential.JSON_PROPERTY_SCHEMA_NAME,
  GenerateTemporaryModelVersionCredential.JSON_PROPERTY_MODEL_NAME,
  GenerateTemporaryModelVersionCredential.JSON_PROPERTY_VERSION,
  GenerateTemporaryModelVersionCredential.JSON_PROPERTY_OPERATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class GenerateTemporaryModelVersionCredential {
  public static final String JSON_PROPERTY_CATALOG_NAME = "catalog_name";
  private String catalogName;

  public static final String JSON_PROPERTY_SCHEMA_NAME = "schema_name";
  private String schemaName;

  public static final String JSON_PROPERTY_MODEL_NAME = "model_name";
  private String modelName;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Long version;

  public static final String JSON_PROPERTY_OPERATION = "operation";
  private ModelOperation operation;

  public GenerateTemporaryModelVersionCredential() {
  }

  public GenerateTemporaryModelVersionCredential catalogName(String catalogName) {
    
    this.catalogName = catalogName;
    return this;
  }

   /**
   * Catalog name for which temporary credentials are generated.  Can be obtained from models/{full_name} (get model info) API. 
   * @return catalogName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATALOG_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCatalogName() {
    return catalogName;
  }


  @JsonProperty(JSON_PROPERTY_CATALOG_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCatalogName(String catalogName) {
    this.catalogName = catalogName;
  }


  public GenerateTemporaryModelVersionCredential schemaName(String schemaName) {
    
    this.schemaName = schemaName;
    return this;
  }

   /**
   * Schema name for which temporary credentials are generated.  Can be obtained from models/{full_name} (get model info) API. 
   * @return schemaName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEMA_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSchemaName() {
    return schemaName;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchemaName(String schemaName) {
    this.schemaName = schemaName;
  }


  public GenerateTemporaryModelVersionCredential modelName(String modelName) {
    
    this.modelName = modelName;
    return this;
  }

   /**
   * Model name for which temporary credentials are generated.  Can be obtained from models/{full_name} (get model info) API. 
   * @return modelName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODEL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModelName() {
    return modelName;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModelName(String modelName) {
    this.modelName = modelName;
  }


  public GenerateTemporaryModelVersionCredential version(Long version) {
    
    this.version = version;
    return this;
  }

   /**
   * Model version for which temporary credentials are generated. 
   * @return version
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(Long version) {
    this.version = version;
  }


  public GenerateTemporaryModelVersionCredential operation(ModelOperation operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ModelOperation getOperation() {
    return operation;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperation(ModelOperation operation) {
    this.operation = operation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateTemporaryModelVersionCredential generateTemporaryModelVersionCredential = (GenerateTemporaryModelVersionCredential) o;
    return Objects.equals(this.catalogName, generateTemporaryModelVersionCredential.catalogName) &&
        Objects.equals(this.schemaName, generateTemporaryModelVersionCredential.schemaName) &&
        Objects.equals(this.modelName, generateTemporaryModelVersionCredential.modelName) &&
        Objects.equals(this.version, generateTemporaryModelVersionCredential.version) &&
        Objects.equals(this.operation, generateTemporaryModelVersionCredential.operation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(catalogName, schemaName, modelName, version, operation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateTemporaryModelVersionCredential {\n");
    sb.append("    catalogName: ").append(toIndentedString(catalogName)).append("\n");
    sb.append("    schemaName: ").append(toIndentedString(schemaName)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

